{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Button/Button.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","assets/data/marks.js","App/App.js","utils/functions.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","s","Button","btnTitle","hadleClick","type","onClick","name","FeedbackOptions","markup","btnMarkup","map","mark","id","item","list","Statistics","stats","total","positivePercentage","statMarkup","reduce","acc","index","stat","Object","values","push","Notification","message","notify","markObj","marksArr","shortid","generate","App","obj","useState","good","setGood","neutral","setNeutral","bad","setBad","marks","value","parseInt","countPositiveFeedbackPercentage","target","toLowerCase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28333c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notify\":\"Notification_notify__2N7kH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2vvCu\",\"item\":\"Statistics_item__15fTm\"};","import s from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import s from \"./Button.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ btnTitle, hadleClick }) => {\r\n  return (\r\n    <button type=\"button\" onClick={hadleClick} name={btnTitle}>\r\n      {btnTitle}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  btnTitle: PropTypes.string.isRequired,\r\n  hadleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import s from \"./FeedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"../Button\";\r\n\r\nconst FeedbackOptions = ({ markup, hadleClick }) => {\r\n  const btnMarkup = markup.map(({ mark, id }) => (\r\n    <li key={id} className={s.item}>\r\n      <Button btnTitle={mark} hadleClick={hadleClick} />\r\n    </li>\r\n  ));\r\n  return <ul className={s.list}>{btnMarkup}</ul>;\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  markup: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n  hadleClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import s from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ markup, stats, total, positivePercentage }) => {\r\n  const combineMarkAndStat = markup.reduce((acc, item, index) => {\r\n    item.stat = Object.values(stats)[index];\r\n    acc.push(item);\r\n    return acc;\r\n  }, []);\r\n  const statMarkup = combineMarkAndStat.map(({ mark, id, stat }) => (\r\n    <li key={id} className={s.item}>\r\n      <span>{mark}:</span>\r\n      <span>{stat}</span>\r\n    </li>\r\n  ));\r\n  return (\r\n    <ul className={s.list}>\r\n      {statMarkup}\r\n      <li key={1} className={s.item}>\r\n        <span>Total:</span>\r\n        <span>{total}</span>\r\n      </li>\r\n      <li key={2} className={s.item}>\r\n        <span>Positive feedback:</span>\r\n        <span>{positivePercentage}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  stats: PropTypes.shape({\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import s from \"./Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p className={s.notify}>{message}</p>;\r\n};\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import shortid from \"shortid\";\r\nexport const markObj = {\r\n  marksArr: [\r\n    {\r\n      mark: \"Good\",\r\n      id: shortid.generate(),\r\n    },\r\n    {\r\n      mark: \"Neutral\",\r\n      id: shortid.generate(),\r\n    },\r\n    {\r\n      mark: \"Bad\",\r\n      id: shortid.generate(),\r\n    },\r\n  ],\r\n};\r\n","import { useState } from \"react\";\r\n\r\nimport Section from \"../components/Section\";\r\nimport FeedbackOptions from \"../components/FeedbackOptions\";\r\nimport Statistics from \"../components/Statistics\";\r\nimport Notification from \"../components/Notification\";\r\nimport {\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n} from \"../utils/functions\";\r\n\r\nimport { markObj } from \"../assets/data/marks\";\r\n\r\n// class App extends Component {\r\n//   state = {\r\n//     good: 0,\r\n//     neutral: 0,\r\n//     bad: 0,\r\n//   };\r\n//   hadleClick = (e) => {\r\n//     const { name } = e.target;\r\n//     const nameInRegister = name.toLowerCase();\r\n//     this.setState((prev) => ({\r\n//       [nameInRegister]: prev[nameInRegister] + 1,\r\n//     }));\r\n//   };\r\n\r\n//   render() {\r\n//     const total = countTotalFeedback(this.state);\r\n//     const positivePercentage = countPositiveFeedbackPercentage(\r\n//       this.state.good,\r\n//       total\r\n//     );\r\n//     return (\r\n//       <>\r\n//         <Section title={`Please leave feddback`}>\r\n//           <FeedbackOptions\r\n//             markup={markObj.marksArr}\r\n//             hadleClick={this.hadleClick}\r\n//           />\r\n//         </Section>\r\n//         <Section title={`Statistics`}>\r\n//           {total === 0 ? (\r\n//             <Notification message=\"No feedback given\" />\r\n//           ) : (\r\n//             <Statistics\r\n//               markup={markObj.marksArr}\r\n//               stats={this.state}\r\n//               total={total}\r\n//               positivePercentage={positivePercentage}\r\n//             />\r\n//           )}\r\n//         </Section>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const marks = { good, neutral, bad };\r\n  const hadleClick = ({ target: { name } }) => {\r\n    const nameInRegister = name.toLowerCase();\r\n    switch (nameInRegister) {\r\n      case \"good\":\r\n        setGood(good + 1);\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral(neutral + 1);\r\n        break;\r\n      case \"bad\":\r\n        setBad(bad + 1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const total = countTotalFeedback(marks);\r\n  const positivePercentage = countPositiveFeedbackPercentage(good, total);\r\n  return (\r\n    <>\r\n      <Section title={`Please leave feddback`}>\r\n        <FeedbackOptions markup={markObj.marksArr} hadleClick={hadleClick} />\r\n      </Section>\r\n      <Section title={`Statistics`}>\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            markup={markObj.marksArr}\r\n            stats={marks}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        )}\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const countTotalFeedback = (obj) =>\r\n  Object.values(obj).reduce((acc, value) => (acc += value), 0);\r\nexport const countPositiveFeedbackPercentage = (value, total) => {\r\n  return total > 0 ? `${parseInt((value / total) * 100)}%` : \"\";\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FeedbackOptions_list__2Uf-P\",\"item\":\"FeedbackOptions_item__LnJWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2So1o\"};"],"sourceRoot":""}